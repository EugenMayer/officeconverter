buildscript {
    ext {
        // @see https://mvnrepository.com/artifact/org.jodconverter/jodconverter-local
        jodconverterVersion = '4.3.0'

        // @see https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
        swaggerVersion = '3.0.0'

        // @see https://mvnrepository.com/artifact/org.mockito/mockito-core
        mockitoVersion = '3.10.0'

        // @see https://mvnrepository.com/artifact/org.apache.tika/tika-parsers
        tikaVersion = '2.0.0'

        // @see https://mvnrepository.com/artifact/org.projectlombok/lombok
        lombokVersion = '1.18.12'

        // @see https://mvnrepository.com/artifact/commons-io/commons-io
        commonsIo = '2.8.0'

        // javax.annotation needed when compiling against > Java 8 since it is no longer included
        // @see https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
        javaxAnnotations = '1.3.2'

        jaxb = "2.3.3"
    }
}

plugins {
    id 'java'
    id 'java-library'

    // we need maven to write out the pom.xml only
    id 'maven-publish'

    // @see https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    // changing that will upgrade spring to the corresponding version
    id 'org.springframework.boot' version '2.3.5.RELEASE'

    // much better output during running tests
    // see https://github.com/radarsh/gradle-test-logger-plugin for configuration options
    id "com.adarshr.test-logger" version "2.1.0"

    // @see https://plugins.gradle.org/plugin/org.sonarqube
    id "org.sonarqube" version "3.0"

    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply from: 'gradle/repositories.gradle'
apply from: 'gradle/build.gradle'
apply from: 'gradle/profiles.gradle'
apply from: 'gradle/tests.gradle'
apply from: 'gradle/spring_bootRun.gradle'
apply from: 'gradle/sonarqube.gradle'
apply from: 'gradle/jacoco.gradle'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    developmentOnly

    providedRuntime

    // needed to get lombok working in our tests
    testImplementation {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

group = 'de.kontextwork'
// this lets us set the version during build using cli -Pversion=1.1.1
version = "${version}"
sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// @see https://github.com/sbrannen/spring-events/blob/master/build.gradle#L38
// and @see https://stackoverflow.com/a/54605523/3625317

// Overwrite Springs default dependency configuration for JUnit5/Hamcrest
// @see https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
ext['junit-jupiter.version'] = '5.6.2'
ext['hamcrest.version'] = '2.1'

dependencies {
    implementation(
            "org.jodconverter:jodconverter-local:$jodconverterVersion",
            "org.jodconverter:jodconverter-spring-boot-starter:$jodconverterVersion",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework:spring-core",
            "io.springfox:springfox-swagger-ui:$swaggerVersion",
            "io.springfox:springfox-swagger2:$swaggerVersion",
            "commons-io:commons-io:$commonsIo",

            // needed when compiling against > Java 8 since jaxb is no longer included
            // you would get Error creating bean with name 'xmlModelPlugin': Lookup method resolution failed
            "org.glassfish.jaxb:jaxb-runtime:$jaxb"
    )

    testImplementation(
            "org.springframework.boot:spring-boot-starter-test",
            "org.junit.jupiter:junit-jupiter-api",
            "org.junit.jupiter:junit-jupiter-params",
            "org.mockito:mockito-core:$mockitoVersion",
            "org.mockito:mockito-junit-jupiter:$mockitoVersion",
            "org.apache.tika:tika-parsers:${tikaVersion}",
    )

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    annotationProcessor(
            "javax.annotation:javax.annotation-api:$javaxAnnotations",
            "org.projectlombok:lombok:$lombokVersion"
    )

    testAnnotationProcessor(
            "org.projectlombok:lombok:$lombokVersion",
    )

    compileOnly(
            "org.projectlombok:lombok:$lombokVersion",
            "org.springframework.boot:spring-boot-configuration-processor"
    )

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

}
