buildscript {
    ext.kotlin_version = '1.8.0'
    ext {
        // @see https://mvnrepository.com/artifact/org.jodconverter/jodconverter-local
        jodconverterVersion = '4.4.6'

        // @see https://mvnrepository.com/artifact/org.mockito/mockito-core
        mockitoVersion = '5.0.0'

        // @see https://mvnrep1ository.com/artifact/org.apache.tika/tika-parsers
        tikaVersion = '2.6.0'

        // @see https://mvnrepository.com/artifact/org.projectlombok/lombok
        lombokVersion = '1.18.24'

        // @see https://mvnrepository.com/artifact/commons-io/commons-io
        commonsIo = '2.11.0'

        // javax.annotation needed when compiling against > Java 8 since it is no longer included
        // @see https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
        javaxAnnotations = '1.3.2'

        // @see https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
        jaxb = "4.0.1"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

    ext['log4j2.version'] = '2.19.0'
}

plugins {
    id 'java'
    id 'java-library'

    // we need maven to write out the pom.xml only
    id 'maven-publish'

    // @see https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    // changing that will upgrade spring to the corresponding version
    id 'org.springframework.boot' version '3.0.2'

    // much better output during running tests
    // see https://github.com/radarsh/gradle-test-logger-plugin for configuration options
    id "com.adarshr.test-logger" version "3.2.0"

    // @see https://plugins.gradle.org/plugin/org.sonarqube
    id "org.sonarqube" version "3.5.0.2730"

    id "org.jetbrains.kotlin.jvm" version "1.8.0"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.8.0"
    id "org.jetbrains.kotlin.plugin.spring" version "1.8.0"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply from: 'gradle/repositories.gradle'
apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/build.gradle'
apply from: 'gradle/tests.gradle'
apply from: 'gradle/spring_bootRun.gradle'
apply from: 'gradle/sonarqube.gradle'
apply from: 'gradle/kotlin.gradle'
apply from: 'gradle/java.gradle'
apply from: 'gradle/configuration.gradle'


group = 'de.kontextwork'
// this lets us set the version during build using cli -Pversion=1.1.1
version = "${version}"

